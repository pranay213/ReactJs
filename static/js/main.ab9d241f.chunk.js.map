{"version":3,"sources":["reportWebVitals.js","Components/TodoList/TodoList.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TodoList","useState","items","setItems","item","setItem","className","style","height","type","onChange","event","target","value","onClick","oldItems","map","itemName","index","id","filter","arrElem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,qBCoECQ,EA1ED,WACX,MAAqBC,mBAAS,IAA9B,mBAAKC,EAAL,KAAWC,EAAX,KAMC,EAAmBF,mBAAS,IAA5B,mBAAKG,EAAL,KAAUC,EAAV,KA8BA,OACI,mCACI,qBAAKC,UAAU,YAAf,SACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,8BAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,oBAAIA,UAAU,iBAAd,0BAEJ,qBAAKA,UAAU,YAAWC,MAAO,CAACC,OAAO,SAAzC,SACI,sBAAKF,UAAU,kBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,uBAAOG,KAAK,OAAOH,UAAU,oBAAoBI,SA9CtE,SAACC,GAEZN,EAAQM,EAAMC,OAAOC,QA4CkFA,MAAOT,IAC/E,wBAAQE,UAAU,mCAAmCQ,QA1CrE,WAEfX,GAAS,SAACY,GAEN,MAAU,KAAPX,EAEO,GAAN,mBAAWW,GAAX,CAAoBX,IAKb,YAAIW,MAInBV,EAAQ,KA2BuB,oBAEH,uBACA,uBACA,6BAEQH,EAAMc,KAAI,SAACC,EAASC,GAChB,OAAO,mCAAiB,sBAAMZ,UAAU,QAAhB,SAAwB,mBAAGA,UAAU,kCAAkCQ,QAAS,WAhCrI,IAACK,IAgCoJD,EA7BjKf,GAAS,SAACD,GAEN,OAAOA,EAAMkB,QAAO,SAACC,EAAQH,GAEzB,OAAOA,IAAQC,aAyB+JF,IAA7HC,yB,YClDhEI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BnC,M","file":"static/js/main.ab9d241f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useState} from 'react';\r\nlet TodoList =()=>\r\n{  let [items,setItems]=useState([]);\r\n\r\n    let itemsInput=(event)=>\r\n    {\r\n        setItem(event.target.value)\r\n    }\r\n    let [item,setItem]=useState('');\r\n    let updateItemlist=()=>\r\n    {\r\n        setItems((oldItems)=>\r\n        {\r\n            if(item!=='')\r\n            {\r\n                return [...oldItems,item]\r\n\r\n            }\r\n            else\r\n            {\r\n                return [...oldItems]\r\n            }\r\n\r\n        })\r\n        setItem('')\r\n    }\r\n    let deleteItem=(id)=>\r\n    {\r\n\r\n       setItems((items)=>\r\n       {\r\n           return items.filter((arrElem,index)=>\r\n           {\r\n               return index!==id;\r\n           })\r\n       })\r\n\r\n    }\r\n    return(\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-6 m-auto text-center\">\r\n                        <div className=\"card shadow-lg \">\r\n                            <div className=\"card-head bg-primary \">\r\n                                <h4 className=\"text-white p-2\">TO-DO LIST</h4>\r\n                            </div>\r\n                            <div className=\"card-body\"style={{height:\"450px\"}}>\r\n                                <div className=\"col-md-6 m-auto\">\r\n                                    <div className=\"form-group \">\r\n                                        <input type=\"text\" className=\"form-control my-2\" onChange={itemsInput} value={item} />\r\n                                       <button className=\"btn btn-success btn-sm shadow-sm\" onClick={updateItemlist}>Add</button>\r\n                                    </div>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <ol>\r\n                                        {\r\n                                            items.map((itemName,index)=>{\r\n                                                return <li key={index}> <span className=\" mx-3\"><i className=\"fas fa-minus-circle text-danger\" onClick={()=>{deleteItem(index)}}></i></span>{itemName}</li>\r\n                                            })\r\n                                        }\r\n\r\n                                    </ol>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default TodoList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport TodoList from \"./Components/TodoList/TodoList\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.bundle';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoList/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}